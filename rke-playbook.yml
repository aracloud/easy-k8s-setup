---
- hosts: all
  become: true
  tasks:

    - name: Configure netplan second nic
      blockinfile:
        path: /etc/netplan/01-netcfg.yaml
        block: |2
              eth1:
                dhcp4: false
                dhcp6: false
                optional: true
                addresses: [{{ node_ip2 }}/24]
                gateway4: {{ gateway_ip }}

    - name: Apply netplan again
      command: netplan apply

    - name: Disable ufw firewall
      command: ufw disable

    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Install docker and its dependecies
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce=5:19.03.15~3-0~ubuntu-bionic
        - docker-ce-cli=5:19.03.15~3-0~ubuntu-bionic
        - containerd.io
      notify:
        - docker status

    - name: Add vagrant user to docker group
      user:
        name: vagrant
        group: docker

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: RKE | Download binary from Github
      get_url:
        url: "https://github.com/rancher/rke/releases/download/{{ rke_version }}/rke_linux-amd64"
        dest: "{{ rke_install_dir }}/rke_{{ rke_version }}"
        owner: "root"
        group: "root"
        mode: 0755

    - name: RKE | Create a symlink to the binary
      file:
        src: "{{ rke_install_dir }}/rke_{{ rke_version }}"
        dest: "{{ rke_install_dir }}/rke"
        state: link

  handlers:
    - name: docker status
      service: name=docker state=started
