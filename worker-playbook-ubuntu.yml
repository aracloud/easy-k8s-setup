---
- hosts: all
  become: true
  tasks:

    - name: Copy netplan first nic template over (DNS hack only)
      template:
        src: netplan.j2
        dest: /etc/netplan/01-netcfg.yaml
        owner: root
        group: root
        mode: 0644
        backup: yes

    - name: Configure netplan second nic
      blockinfile:
        path: /etc/netplan/01-netcfg.yaml
        block: |2
              eth1:
                dhcp4: false
                dhcp6: false
                optional: true
                addresses: [{{ node_ip2 }}/24]
                gateway4: {{ gateway_ip }}

    - name: Apply netplan again
      command: netplan apply

    - name: Disable ufw firewall
      command: ufw disable

    - name: Add DNS resolution for rancher
      blockinfile:
        path: /etc/hosts
        block: |
          {{ rke_rancher_hostip }}  {{ rke_rancher_hostname }}

    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - net-tools

    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Install docker and its dependecies
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce=5:19.03.15~3-0~ubuntu-bionic
        - docker-ce-cli=5:19.03.15~3-0~ubuntu-bionic
        - containerd.io
      notify:
        - docker status

    - name: Add vagrant user to docker group
      user:
        name: vagrant
        group: docker

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0



#     ### Start installing K8s worker
    # - name: Add an apt signing key for Kubernetes
    #   apt_key:
    #     url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    #     state: present

    # - name: Adding apt repository for Kubernetes
    #   apt_repository:
    #     repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    #     state: present
    #     filename: kubernetes.list

    # - name: Install Kubernetes binaries
    #   apt: 
    #     name: "{{ packages }}"
    #     state: present
    #     update_cache: yes
    #   vars:
    #     packages:
    #       - kubelet 
    #       - kubeadm 
    #       - kubectl


#     - name: Configure node ip for Kubernetes
#       lineinfile:
#         create: yes
#         path: /etc/default/kubelet
#         line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip2 }}

#     - name: Restart kubelet
#       service:
#         name: kubelet
#         daemon_reload: yes
#         state: restarted

# #    - wait_for:
# #        path: /tmp/join-command.sh

#     - name: Copy the join command to server location
#       copy: src=join-command dest=/tmp/join-command.sh mode=0777

#     - name: Join the node to cluster
#       command: sh /tmp/join-command.sh

  handlers:
    - name: docker status
      service: name=docker state=started
